package screenbot

import (
	"att-diplom/internal/buttons"
	"att-diplom/internal/helper"
	"att-diplom/internal/types"
	"database/sql"
	"fmt"
	"log"
	"strings"
	"time"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func CheckStatusAppScreen(bot *tgbotapi.BotAPI, message *tgbotapi.Message, db *sql.DB) {
	chatID := message.Chat.ID

	bot.Send(tgbotapi.NewMessage(chatID, "–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏"))

	msg1 := tgbotapi.NewMessage(chatID, "üìù –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–∞–±–∏–Ω–µ—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:")
	msg1.ReplyMarkup = buttons.ExitCreateApp()
	bot.Send(msg1)

	userMsg1, err := helper.WaitForUserInput(chatID, 60*time.Second)
	if err != nil {
		bot.Send(tgbotapi.NewMessage(chatID, err.Error()))
		return
	}

	cabinet := strings.TrimSpace(userMsg1.Text)

	// –ø–æ–∏—Å–∫ –≤ –±–¥

	var applications []types.Application

	query := `
	SELECT idapplication, description, nameteacher, idengineer, status, startdate, enddate, cabinet
	FROM applications
	WHERE cabinet = $1
`

	rows, err := db.Query(query, cabinet)
	if err != nil {
		log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞:", err)
		bot.Send(tgbotapi.NewMessage(chatID, "üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö."))
		return
	}
	defer rows.Close()

	for rows.Next() {
		var app types.Application
		err := rows.Scan(
			&app.ID,
			&app.Description,
			&app.NameTeacher,
			&app.IDEngineer,
			&app.Status,
			&app.StartDate,
			&app.EndDate,
			&app.Cabinet,
		)
		if err != nil {
			log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Å—Ç—Ä–æ–∫–∏:", err)
			continue
		}
		applications = append(applications, app)
	}

	if len(applications) == 0 {
		bot.Send(tgbotapi.NewMessage(chatID, "‚ùå –ó–∞—è–≤–∫–∏ –¥–ª—è —ç—Ç–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã."))
		return
	}

	var result string
	for _, app := range applications {
		entry := fmt.Sprintf(
			"üìÑ –ó–∞—è–≤–∫–∞ ‚Ññ%d\nüë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: %s\nüì¶ –ü—Ä–æ–±–ª–µ–º–∞: %s\nüìç –ö–∞–±–∏–Ω–µ—Ç: %s\nüìå –°—Ç–∞—Ç—É—Å: %s\n\n",
			app.ID,
			app.NameTeacher.String,
			app.Description.String,
			app.Cabinet.String,
			app.Status.String,
		)
		result += entry
	}

	bot.Send(tgbotapi.NewMessage(chatID, result))
	MainScreenBot(bot, message)
}
